version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: flowlytix_subscriptions
      POSTGRES_USER: flowlytix
      POSTGRES_PASSWORD: flowlytix_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U flowlytix -d flowlytix_subscriptions']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Subscription Server
  app:
    build: .
    ports:
      - '8000:8000'
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://flowlytix:flowlytix_password@db:5432/flowlytix_subscriptions
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALLOWED_ORIGINS=["http://localhost:3000", "http://localhost:8080", "http://127.0.0.1:3000", "http://127.0.0.1:8080", "http://192.168.65.1:3000", "http://192.168.65.1:8080", "http://host.docker.internal:3000", "http://host.docker.internal:8080"]
    volumes:
      - .:/app
      - ./keys:/app/keys
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Alembic Migration Runner (for development)
  migration:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://flowlytix:flowlytix_password@db:5432/flowlytix_subscriptions
    volumes:
      - ./alembic:/app/alembic
    depends_on:
      db:
        condition: service_healthy
    command: ['alembic', 'upgrade', 'head']
    restart: 'no'

  # PgAdmin (for development)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@flowlytix.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    restart: unless-stopped
    profiles:
      - dev

  # Redis Commander (for development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  default:
    name: flowlytix-network
