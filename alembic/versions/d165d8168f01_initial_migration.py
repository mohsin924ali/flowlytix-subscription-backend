"""Initial migration

Revision ID: d165d8168f01
Revises: 
Create Date: 2025-07-09 12:18:36.771326

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd165d8168f01'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique customer identifier'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Customer name'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='Customer email address'),
    sa.Column('company', sa.String(length=255), nullable=True, comment='Customer company name'),
    sa.Column('phone', sa.String(length=50), nullable=True, comment='Customer phone number'),
    sa.Column('address', sa.Text(), nullable=True, comment='Customer address'),
    sa.Column('metadata_json', sa.JSON(), nullable=True, comment='Additional customer metadata'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Customer creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Customer last update timestamp'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customers')),
    sa.UniqueConstraint('email', name=op.f('uq_customers_email'))
    )
    op.create_index('idx_customers_company', 'customers', ['company'], unique=False)
    op.create_index('idx_customers_created_at', 'customers', ['created_at'], unique=False)
    op.create_index('idx_customers_email', 'customers', ['email'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique subscription identifier'),
    sa.Column('customer_id', sa.UUID(), nullable=False, comment='Customer who owns this subscription'),
    sa.Column('license_key', sa.String(length=255), nullable=False, comment='Unique license key'),
    sa.Column('tier', sa.Enum('basic', 'professional', 'enterprise', 'trial', name='subscription_tier'), nullable=False, comment='Subscription tier'),
    sa.Column('status', sa.Enum('active', 'expired', 'suspended', 'cancelled', 'pending', name='subscription_status'), nullable=False, comment='Subscription status'),
    sa.Column('features', sa.JSON(), nullable=False, comment='Enabled features for this subscription'),
    sa.Column('max_devices', sa.Integer(), nullable=False, comment='Maximum number of devices allowed'),
    sa.Column('starts_at', sa.DateTime(timezone=True), nullable=False, comment='Subscription start date'),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True, comment='Subscription expiration date'),
    sa.Column('grace_period_days', sa.Integer(), nullable=False, comment='Grace period in days after expiration'),
    sa.Column('price', sa.Float(), nullable=True, comment='Subscription price'),
    sa.Column('currency', sa.String(length=3), nullable=False, comment='Price currency code'),
    sa.Column('auto_renew', sa.Boolean(), nullable=False, comment='Auto-renewal flag'),
    sa.Column('renewal_period_days', sa.Integer(), nullable=True, comment='Renewal period in days'),
    sa.Column('metadata_json', sa.JSON(), nullable=True, comment='Additional subscription metadata'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Subscription creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Subscription last update timestamp'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name=op.f('fk_subscriptions_customer_id_customers'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscriptions')),
    sa.UniqueConstraint('license_key', name=op.f('uq_subscriptions_license_key'))
    )
    op.create_index('idx_subscriptions_created_at', 'subscriptions', ['created_at'], unique=False)
    op.create_index('idx_subscriptions_customer_id', 'subscriptions', ['customer_id'], unique=False)
    op.create_index('idx_subscriptions_expires_at', 'subscriptions', ['expires_at'], unique=False)
    op.create_index('idx_subscriptions_license_key', 'subscriptions', ['license_key'], unique=False)
    op.create_index('idx_subscriptions_status', 'subscriptions', ['status'], unique=False)
    op.create_index('idx_subscriptions_tier', 'subscriptions', ['tier'], unique=False)
    op.create_table('devices',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique device identifier'),
    sa.Column('subscription_id', sa.UUID(), nullable=False, comment='Subscription this device is associated with'),
    sa.Column('device_id', sa.String(length=255), nullable=False, comment='Device identifier from the client'),
    sa.Column('device_name', sa.String(length=255), nullable=True, comment='Human-readable device name'),
    sa.Column('device_type', sa.String(length=50), nullable=True, comment='Device type (desktop, mobile, etc.)'),
    sa.Column('fingerprint', sa.String(length=255), nullable=True, comment='Device fingerprint hash'),
    sa.Column('os_name', sa.String(length=100), nullable=True, comment='Operating system name'),
    sa.Column('os_version', sa.String(length=100), nullable=True, comment='Operating system version'),
    sa.Column('app_version', sa.String(length=50), nullable=True, comment='Application version'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Device active status'),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=True, comment='Last activity timestamp'),
    sa.Column('metadata_json', sa.JSON(), nullable=True, comment='Additional device metadata'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Device creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Device last update timestamp'),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], name=op.f('fk_devices_subscription_id_subscriptions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_devices'))
    )
    op.create_index('idx_devices_created_at', 'devices', ['created_at'], unique=False)
    op.create_index('idx_devices_device_id', 'devices', ['device_id'], unique=False)
    op.create_index('idx_devices_fingerprint', 'devices', ['fingerprint'], unique=False)
    op.create_index('idx_devices_is_active', 'devices', ['is_active'], unique=False)
    op.create_index('idx_devices_last_seen_at', 'devices', ['last_seen_at'], unique=False)
    op.create_index('idx_devices_subscription_device_unique', 'devices', ['subscription_id', 'device_id'], unique=True)
    op.create_index('idx_devices_subscription_id', 'devices', ['subscription_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_devices_subscription_id', table_name='devices')
    op.drop_index('idx_devices_subscription_device_unique', table_name='devices')
    op.drop_index('idx_devices_last_seen_at', table_name='devices')
    op.drop_index('idx_devices_is_active', table_name='devices')
    op.drop_index('idx_devices_fingerprint', table_name='devices')
    op.drop_index('idx_devices_device_id', table_name='devices')
    op.drop_index('idx_devices_created_at', table_name='devices')
    op.drop_table('devices')
    op.drop_index('idx_subscriptions_tier', table_name='subscriptions')
    op.drop_index('idx_subscriptions_status', table_name='subscriptions')
    op.drop_index('idx_subscriptions_license_key', table_name='subscriptions')
    op.drop_index('idx_subscriptions_expires_at', table_name='subscriptions')
    op.drop_index('idx_subscriptions_customer_id', table_name='subscriptions')
    op.drop_index('idx_subscriptions_created_at', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('idx_customers_email', table_name='customers')
    op.drop_index('idx_customers_created_at', table_name='customers')
    op.drop_index('idx_customers_company', table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ### 